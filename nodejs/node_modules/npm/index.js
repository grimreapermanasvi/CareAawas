const express = require('express');
const mysql = require('mysql');
const bodyParser = require('body-parser');
const cors = require('cors');

const app = express();
app.use(bodyParser.json());
app.use(cors());

// Connect to MySQL
const db = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: 'muskansi85820',
    database: 'careaawas',
});

db.connect((err) => {
    if (err) {
        console.log('Database connection error:', err);
        return;
    }
    console.log('Connected to MySQL!');
});

// NGO signup
app.post('/ngo', (req, res) => {
    const { ngo_name, email, ph_no, password } = req.body;
    const query = 'INSERT INTO ngo (ngo_name, email, ph_no, password) VALUES (?, ?, ?, ?)';
    db.query(query, [ngo_name, email, ph_no, password], (err, result) => {
        if (err) {
            console.log('Error saving NGO:', err);
            return res.status(500).send('Failed to register NGO.');
        }
        res.send({ message: 'NGO registered successfully!', ngo_id: result.insertId });
    });
});

// NGO login with email and password
app.post('/ngo/login', (req, res) => {
    const { email, password } = req.body; // Using email and password for login
    const query = 'SELECT * FROM ngo WHERE email = ? AND password = ?';
    db.query(query, [email, password], (err, results) => {
        if (err) {
            console.log('Error during login:', err);
            return res.status(500).send('Login failed.');
        }
        if (results.length === 0) {
            return res.status(401).send('Invalid credentials.');
        }
        res.send({ message: 'Login successful', ngo: results[0] });
    });
});

// Add doctor (from NGO)
app.post('/doctor', (req, res) => {
    const { name, license, email, mobile, degree, password } = req.body;
    const query = 'INSERT INTO doctor (name, license, email, mobile, degree, password) VALUES (?, ?, ?, ?, ?, ?)';
    db.query(query, [name, license, email, mobile, degree, password], (err, result) => {
        if (err) {
            console.log('Error adding doctor:', err);
            return res.status(500).send('Failed to add doctor: ');
        }
        res.send({ message: 'Doctor added successfully!', doctor_id: result.insertId });
    });
});


// Doctor login with email and password
app.post('/doctor/login', (req, res) => {
    const { email, password } = req.body;  // Using email and password for login
    const query = 'SELECT * FROM doctor WHERE email = ? AND password = ?';
    db.query(query, [email, password], (err, results) => {
        if (err) {
            console.log('Error during login:', err);
            return res.status(500).send('Login failed.');
        }
        if (results.length === 0) {
            return res.status(401).send('Invalid credentials.');
        }
        res.send({ message: 'Login successful', doctor: results[0] });
    });
});



// Add patient (from NGO)
app.post('/patient', (req, res) => {
    const { name, age, mobile, email, addiction_type, password } = req.body;
    const query = 'INSERT INTO patient (name, age, mobile, email, addiction_type, password) VALUES (?, ?, ?, ?, ?, ?)';
    db.query(query, [name, age, mobile, email, addiction_type, password], (err, result) => {
        if (err) {
            console.log('Error adding patient:', err);
            return res.status(500).send('Failed to add patient.');
        }
        res.send({ message: 'Patient added successfully!', patient_id: result.insertId });
    });
});



// Doctor login with email and password
app.post('/patient/login', (req, res) => {
    const { email, password } = req.body;  // Using email and password for login
    const query = 'SELECT * FROM patient WHERE email = ? AND password = ?';
    db.query(query, [email, password], (err, results) => {
        if (err) {
            console.log('Error during login:', err);
            return res.status(500).send('Login failed.');
        }
        if (results.length === 0) {
            return res.status(401).send('Invalid credentials.');
        }
        res.send({ message: 'Login successful', patient: results[0] });
    });
});

// Update patient's doctor
app.put('/patient/:id', (req, res) => {
    const { id } = req.params;
    const { doctor_id } = req.body;
    const query = 'UPDATE patient SET doctor_id = ? WHERE id = ?';
    db.query(query, [doctor_id, id], (err) => {
        if (err) {
            console.log('Error updating patient:', err);
            return res.status(500).send('Failed to update patient.');
        }
        res.send('Patient updated successfully!');
    });
});

// Server
app.listen(3000,'0.0.0.0', () => {
    console.log('Server is running on http://localhost:3000');
});

